Standard Funktionen für Models
===============================

Damit conescy jedes Model möglichst gleich ansprechen kann, gibt es einige Funktionen, die jede Model-Klasse enthalten sollte. Später wird dies z.B. von der Suche zur Auflistung von Inhalten verwendet werden können.

`__unicode__` oder `__str__`
----------------------------

Gibt einen Namen für das Objekt bzw. die Klassen-Instanz aus, der nicht unbedingt der Titel sein muss (z.B. bei Kommentaren die ID). Es sollte `__unicode__` verwendet.

	def __unicode__(self):
		return "#%i %s" % (self.id, self.title)

`get_absolute_url`
------------------

Gibt die absolute URL des aktuellen Objekts zurück. Wird am besten aufgrund einer URL-Angabe bestimmt (Reverse URL Pattern), z.B. mit dem `permalink`-Dekorater in `django.db.models` (siehe auch in der [Django-Dokumentation](http://www.djangoproject.com/documentation/model-api/#the-permalink-decorator)).

	from django.db import models
	
	@models.permalink
	def get_absolute_url(self):
		return ("blog-entry-detail", [self.slug])

`get_author_name`
-----------------

Gibt den Namen des Autors des Objektes zurück, sofern angegeben.

	def get_author_name(self):
		return self.author

`get_the_content`
-----------------

Gibt den vollständigen Inhalt des Objekts aus (wird z.B. in Templates später gekürzt).

	def get_the_content(self):
		return self.content

`get_the_title`
---------------

Gibt den Titel des Objekts aus. Wird statt `__unicode__` oder `__str__` verwendet, da diese nicht unbeding den Titel ausgeben.

	def get_the_title(self):
		return self.title
